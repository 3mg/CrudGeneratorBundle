<?php

namespace {{ namespace }}\Form{{ entity_namespace ? '\\' ~ entity_namespace : '' }};

use Symfony\Component\Form\AbstractType;
use Symfony\Component\Form\FormBuilderInterface;
use Symfony\Component\OptionsResolver\OptionsResolverInterface;

/**
 * Form  
 * 
 * @author Nombre Apellido <name@gmail.com>
 */
class {{ form_class }} extends AbstractType
{

    /**
     * Construye form
     * 
     * @param \Symfony\Component\Form\FormBuilderInterface $builder Builder del Form
     * @param array                                        $options Options
     * 
     * @return form 
     */
    public function buildForm(FormBuilderInterface $builder, array $options)
    {
        $builder
        {%- for field in fields %}

            ->add('{{ field }}')

        {%- endfor %}
            
            ->add(
                'save', 'submit', array(
                'translation_domain' => 'MWSimpleCrudGeneratorBundle',
                'label'              => 'views.new.save',
                'attr'               => array('class' => 'btn btn-success')
                )
            )
            ->add(
                'saveAndAdd', 'submit', array(
                'translation_domain' => 'MWSimpleCrudGeneratorBundle',
                'label'              => 'views.new.saveAndAdd',
                'attr'               => array('class' => 'btn btn-primary')
                )
            );
    }
    
    /**
     * Set Defaults options
     * 
     * @param \Symfony\Component\OptionsResolver\OptionsResolverInterface $resolver Resolver interface
     * 
     * @return array 
     */
    public function setDefaultOptions(OptionsResolverInterface $resolver)
    {
        $resolver->setDefaults(
            array('data_class' => '{{ namespace }}\Entity{{ entity_namespace ? '\\' ~ entity_namespace : '' }}\{{ entity_class }}' )
        );
    }

    /**
     * Nombre
     * 
     * @return string 
     */
    public function getName()
    {
        return '{{ form_type_name }}';
    }
}
